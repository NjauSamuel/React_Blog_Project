# STATE

## State

-  A state is a components' own data thus why in a class, you can access the
   state using the `this` keyword.
-  Props is not a components own data it is data passed to another component.
-  In a class based component, a state is an object. So we initialize state in a
   constructor.

*  You can also receive a props through a constructor.
*  Whenever you update a state, react will automatically render a component.

## State Shortcut Initialization

state = {course: "react"};

<p> State: This is {this.state.course} course. </p>

## componentDidMount(){}

-  `componentDidMount(){}` is nothing but a method in a class based component.
-  When a jsx element is rendered, this `componentDidMount(){}` method is called
   automatically.

### When to use componentDidMount(){}

-  just imagine you want to show some post list which comes from an API request.
   After rendering all the jsx, you call this API through this
   `componentDidMount(){}` method, thus, after updating our state, react
   automatically rendered this component. "Just keep in mind it is only after
   rendering the jsx element that this component is actually called. '
